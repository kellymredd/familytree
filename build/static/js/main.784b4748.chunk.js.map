{"version":3,"sources":["shared/Header.js","shared/Template.js","controls/Button.js","controls/DateInput.js","controls/Input.js","controls/Select.js","utils/states.js","shared/EventForm.js","profile/EventSectionDisplay.js","hooks/eventService.js","profile/NoItemsFound.js","profile/EventSection.js","profile/FamilySectionDisplay.js","hooks/userService.js","hooks/familyService.js","shared/MemberTypes.js","shared/MemberForm.js","user/CreateScreen.js","profile/FamilySection.js","profile/ProfileScreen.js","http/http.js","list/ListUsers.js","hooks/useMembers.hook.js","user/EditScreen.js","tree/Tree.js","App.js","index.js"],"names":["Header","className","to","Template","children","Head","Body","Button","id","onClick","btnStyle","props","type","e","DateInput","label","onChange","htmlFor","name","Input","value","Select","options","selectValueKey","selectLabelKey","useState","opts","setOpts","useEffect","Promise","resolve","then","response","map","option","idx","code","EventForm","event","handleSave","handleCancel","index","ev","setEv","updateFormFields","target","prev","Type","Date","City","County","State","states","Country","style","height","setEventTitle","title","EventSectionDisplay","date","handleDelete","setCurrentEvent","UserId","toLocaleDateString","timeZone","role","httpEventService","saveEvent","getEvent","listEvents","deleteEvent","itemType","EventSection","user","events","setEvents","eventType","setEventType","modalOpen","setModalOpen","newEvent","currentEvent","cancelEvent","filtered","filter","setFormAndMemberType","sort","a","b","aDate","bDate","length","FamilySectionDisplay","member","FirstName","LastName","MiddleName","httpUserService","saveUser","getUser","listUsers","deleteUser","userSelectOptions","HttpFamilyService","listFamily","getFamilyTree","parents","siblings","spouse","MemberForm","memberType","genderValue","MemberTypeOptions","Gender","MaidenName","Suffix","DOB","placeholder","Status","DOD","CreateScreen","initialMember","handleSaveById","contextMember","initial","Spouse","Parents","setUser","NotFound","FamilySection","members","setMembers","setMemberType","httpFamilyService","savedUser","prevMemberType","sib","aGender","bGender","calcAge","dob","dod","calcDate","Math","floor","getTime","ProfileScreen","profile","setProfile","useParams","safeProfile","data","http","axios","ListUsersScreen","users","setUsers","getMembers","getMember","get","url","saveMember","deleteMember","classnames","nameA","toUpperCase","nameB","initialState","FamilyId","EditScreen","history","useHistory","catch","error","console","log","push","uid","Tree","poop","App","exact","path","pageTitle","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wMAGe,SAASA,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,6CCLK,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SACjC,OAAO,mCAAGA,IAGZD,EAASE,KAAO,YAAmB,IAAhBD,EAAe,EAAfA,SACjB,OACE,qBAAKH,UAAU,SAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,cAACD,EAAD,IACCI,QAMTD,EAASG,KAAO,YAAmB,IAAhBF,EAAe,EAAfA,SACjB,OACE,qBAAKH,UAAU,qBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SAAsBG,S,2ECnBf,SAASG,EAAT,GAAgE,IAA9CH,EAA6C,EAA7CA,SAAUI,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,SAAaC,EAAS,iBAC5E,OACE,kDACMA,GADN,IAEEH,GAAIA,EACJI,KAAK,SACLX,UAAS,yBAAoBS,GAC7BD,QAAS,SAACI,GAAD,OAAOJ,EAAQI,IAL1B,SAOGT,K,gCCVQ,SAASU,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,MAAOP,EAA0B,EAA1BA,GAAIQ,EAAsB,EAAtBA,SAAaL,EAAS,iBACnE,OACE,sBAAKV,UAAU,QAAf,UACE,uBAAOgB,QAAST,EAAhB,SAAqBO,IACrB,iDACMJ,GADN,IAEEC,KAAK,OACLX,UAAU,+BACViB,KAAMV,EACAA,KACNQ,SAAU,SAACH,GAAD,OAAOG,EAASH,U,wCCVnB,SAASM,EAAT,GAA0D,IAAzCJ,EAAwC,EAAxCA,MAAOK,EAAiC,EAAjCA,MAAOZ,EAA0B,EAA1BA,GAAIQ,EAAsB,EAAtBA,SAAaL,EAAS,iBACtE,OACE,sBAAKV,UAAU,QAAf,UACE,uBAAOgB,QAAST,EAAhB,SAAqBO,IACrB,iDACMJ,GADN,IAEEC,KAAK,OACLX,UAAU,+BACViB,KAAMV,EACAY,QAAOZ,KACbQ,SAAU,SAACH,GAAD,OAAOG,EAASH,U,oFCVnB,SAASQ,EAAT,GASX,IARFN,EAQC,EARDA,MACAK,EAOC,EAPDA,MACAZ,EAMC,EANDA,GACAQ,EAKC,EALDA,SAKC,IAJDM,eAIC,MAJS,GAIT,MAHDC,sBAGC,MAHgB,OAGhB,MAFDC,sBAEC,MAFgB,OAEhB,EADEb,EACF,iBACD,EAAwBc,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACRC,QAAQC,QAAQR,GAASS,MAAK,SAACC,GAAD,OAAcL,EAAQK,QACnD,CAACV,IAGF,qCACE,uBAAOL,QAAST,EAAhB,SAAqBO,IACrB,iDACEH,KAAK,OACLX,UAAU,8BACViB,KAAMV,EACAY,QAAOZ,KACbQ,SAAU,SAACH,GAAD,OAAOG,EAASH,KACtBF,GANN,cAQE,wBAAQS,MAAM,GAAd,sBARF,OASGM,QATH,IASGA,OATH,EASGA,EAAMO,KAAI,SAACC,EAAQC,GAAT,OACT,wBAAkBf,MAAOc,EAAOX,GAAhC,SACGW,EAAOV,IADGW,aC/BR,OACb,CACEjB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,SACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,aACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,cACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,SACNkB,KAAM,MAER,CACElB,KAAM,QACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,OACNkB,KAAM,MAER,CACElB,KAAM,SACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,YACNkB,KAAM,MAER,CACElB,KAAM,QACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,gBACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,YACNkB,KAAM,MAER,CACElB,KAAM,cACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,SACNkB,KAAM,MAER,CACElB,KAAM,gBACNkB,KAAM,MAER,CACElB,KAAM,aACNkB,KAAM,MAER,CACElB,KAAM,aACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,iBACNkB,KAAM,MAER,CACElB,KAAM,eACNkB,KAAM,MAER,CACElB,KAAM,OACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,SACNkB,KAAM,MAER,CACElB,KAAM,eACNkB,KAAM,MAER,CACElB,KAAM,eACNkB,KAAM,MAER,CACElB,KAAM,iBACNkB,KAAM,MAER,CACElB,KAAM,eACNkB,KAAM,MAER,CACElB,KAAM,YACNkB,KAAM,MAER,CACElB,KAAM,QACNkB,KAAM,MAER,CACElB,KAAM,OACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,MAER,CACElB,KAAM,WACNkB,KAAM,MAER,CACElB,KAAM,aACNkB,KAAM,MAER,CACElB,KAAM,gBACNkB,KAAM,MAER,CACElB,KAAM,YACNkB,KAAM,MAER,CACElB,KAAM,UACNkB,KAAM,OCnMK,SAASC,EAAT,GAKX,IAAD,IAJDC,aAIC,MAJO,GAIP,EAHDC,EAGC,EAHDA,WACAC,EAEC,EAFDA,aACAC,EACC,EADDA,MAEA,EAAoBhB,mBAASa,GAA7B,mBAAOI,EAAP,KAAWC,EAAX,KAEMC,EAAmB,SAAC/B,GACxB,MAAwBA,EAAEgC,OAAlB3B,EAAR,EAAQA,KAAME,EAAd,EAAcA,MACduB,GAAM,SAACG,GAAD,mBAAC,eACFA,GADC,kBAEH5B,EAAOE,QAIZ,OACE,qCACE,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,+BAAU,OAALqC,QAAK,IAALA,KAAO9B,GAAK,OAAS,MAA1B,cAEF,sBAAKP,UAAU,YAAf,UACE,qBAAKA,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","file":"static/js/main.784b4748.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div className=\"nav\">\n      <div className=\"row\">\n        <Link to=\"/\">\n          <h1>Roots</h1>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\n\nexport default function Template({ children }) {\n  return <>{children}</>;\n}\n\nTemplate.Head = ({ children }) => {\n  return (\n    <div className=\"header\">\n      <div className=\"container maxWidth\">\n        <Header />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nTemplate.Body = ({ children }) => {\n  return (\n    <div className=\"container maxWidth\">\n      <div className=\"row\">\n        <div className=\"col\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\n// form-control class remove to prevent 100% width\nexport default function Button({ children, id, onClick, btnStyle, ...props }) {\n  return (\n    <button\n      {...props}\n      id={id}\n      type=\"button\"\n      className={`btn-sm btn btn-${btnStyle}`}\n      onClick={(e) => onClick(e)}\n    >\n      {children}\n    </button>\n  );\n}\n","import React from \"react\";\n\nexport default function DateInput({ label, id, onChange, ...props }) {\n  return (\n    <div className=\"mb-15\">\n      <label htmlFor={id}>{label}</label>\n      <input\n        {...props}\n        type=\"date\"\n        className=\"form-control form-control-sm\"\n        name={id}\n        {...{ id }}\n        onChange={(e) => onChange(e)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Input({ label, value, id, onChange, ...props }) {\n  return (\n    <div className=\"mb-15\">\n      <label htmlFor={id}>{label}</label>\n      <input\n        {...props}\n        type=\"text\"\n        className=\"form-control form-control-sm\"\n        name={id}\n        {...{ value, id }}\n        onChange={(e) => onChange(e)}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Select({\n  label,\n  value,\n  id,\n  onChange,\n  options = [],\n  selectValueKey = \"name\",\n  selectLabelKey = \"name\",\n  ...props\n}) {\n  const [opts, setOpts] = useState([]);\n\n  useEffect(() => {\n    Promise.resolve(options).then((response) => setOpts(response));\n  }, [options]);\n\n  return (\n    <>\n      <label htmlFor={id}>{label}</label>\n      <select\n        type=\"text\"\n        className=\"form-control form-select-sm\"\n        name={id}\n        {...{ value, id }}\n        onChange={(e) => onChange(e)}\n        {...props}\n      >\n        <option value=\"\">-Select-</option>\n        {opts?.map((option, idx) => (\n          <option key={idx} value={option[selectValueKey]}>\n            {option[selectLabelKey]}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n","export default [\n  {\n    name: \"Alabama\",\n    code: \"AL\"\n  },\n  {\n    name: \"Alaska\",\n    code: \"AK\"\n  },\n  {\n    name: \"Arizona\",\n    code: \"AZ\"\n  },\n  {\n    name: \"Arkansas\",\n    code: \"AR\"\n  },\n  {\n    name: \"California\",\n    code: \"CA\"\n  },\n  {\n    name: \"Colorado\",\n    code: \"CO\"\n  },\n  {\n    name: \"Connecticut\",\n    code: \"CT\"\n  },\n  {\n    name: \"Delaware\",\n    code: \"DE\"\n  },\n  {\n    name: \"Florida\",\n    code: \"FL\"\n  },\n  {\n    name: \"Georgia\",\n    code: \"GA\"\n  },\n  {\n    name: \"Hawaii\",\n    code: \"HI\"\n  },\n  {\n    name: \"Idaho\",\n    code: \"ID\"\n  },\n  {\n    name: \"Illinois\",\n    code: \"IL\"\n  },\n  {\n    name: \"Indiana\",\n    code: \"IN\"\n  },\n  {\n    name: \"Iowa\",\n    code: \"IA\"\n  },\n  {\n    name: \"Kansas\",\n    code: \"KS\"\n  },\n  {\n    name: \"Kentucky\",\n    code: \"KY\"\n  },\n  {\n    name: \"Louisiana\",\n    code: \"LA\"\n  },\n  {\n    name: \"Maine\",\n    code: \"ME\"\n  },\n  {\n    name: \"Maryland\",\n    code: \"MD\"\n  },\n  {\n    name: \"Massachusetts\",\n    code: \"MA\"\n  },\n  {\n    name: \"Michigan\",\n    code: \"MI\"\n  },\n  {\n    name: \"Minnesota\",\n    code: \"MN\"\n  },\n  {\n    name: \"Mississippi\",\n    code: \"MS\"\n  },\n  {\n    name: \"Missouri\",\n    code: \"MO\"\n  },\n  {\n    name: \"Montana\",\n    code: \"MT\"\n  },\n  {\n    name: \"Nebraska\",\n    code: \"NE\"\n  },\n  {\n    name: \"Nevada\",\n    code: \"NV\"\n  },\n  {\n    name: \"New Hampshire\",\n    code: \"NH\"\n  },\n  {\n    name: \"New Jersey\",\n    code: \"NJ\"\n  },\n  {\n    name: \"New Mexico\",\n    code: \"NM\"\n  },\n  {\n    name: \"New York\",\n    code: \"NY\"\n  },\n  {\n    name: \"North Carolina\",\n    code: \"NC\"\n  },\n  {\n    name: \"North Dakota\",\n    code: \"ND\"\n  },\n  {\n    name: \"Ohio\",\n    code: \"OH\"\n  },\n  {\n    name: \"Oklahoma\",\n    code: \"OK\"\n  },\n  {\n    name: \"Oregon\",\n    code: \"OR\"\n  },\n  {\n    name: \"Pennsylvania\",\n    code: \"PA\"\n  },\n  {\n    name: \"Rhode Island\",\n    code: \"RI\"\n  },\n  {\n    name: \"South Carolina\",\n    code: \"SC\"\n  },\n  {\n    name: \"South Dakota\",\n    code: \"SD\"\n  },\n  {\n    name: \"Tennessee\",\n    code: \"TN\"\n  },\n  {\n    name: \"Texas\",\n    code: \"TX\"\n  },\n  {\n    name: \"Utah\",\n    code: \"UT\"\n  },\n  {\n    name: \"Vermont\",\n    code: \"VT\"\n  },\n  {\n    name: \"Virginia\",\n    code: \"VA\"\n  },\n  {\n    name: \"Washington\",\n    code: \"WA\"\n  },\n  {\n    name: \"West Virginia\",\n    code: \"WV\"\n  },\n  {\n    name: \"Wisconsin\",\n    code: \"WI\"\n  },\n  {\n    name: \"Wyoming\",\n    code: \"WY\"\n  }\n];\n","import React, { useState } from \"react\";\nimport { Input, Select, Button, DateInput } from \"../controls/index\";\nimport states from \"../utils/states.js\";\n\nexport default function EventForm({\n  event = {},\n  handleSave,\n  handleCancel,\n  index\n}) {\n  const [ev, setEv] = useState(event);\n\n  const updateFormFields = (e) => {\n    const { name, value } = e.target;\n    setEv((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3>{event?.id ? \"Edit\" : \"Add\"} Event</h3>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <Select\n                id=\"Type\"\n                label=\"Type\"\n                value={ev.Type}\n                onChange={updateFormFields}\n                options={[\n                  { name: \"Birth\" },\n                  { name: \"Death\" },\n                  { name: \"Marriage\" }\n                ]}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <DateInput\n                id=\"Date\"\n                label=\"Date\"\n                value={ev.Date}\n                onChange={updateFormFields}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Input\n                id=\"City\"\n                label=\"City\"\n                value={ev.City}\n                onChange={updateFormFields}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Input\n                id=\"County\"\n                label=\"County\"\n                value={ev.County}\n                onChange={updateFormFields}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Select\n                id=\"State\"\n                label=\"State\"\n                value={ev.State}\n                onChange={updateFormFields}\n                options={states}\n                selectValueKey=\"code\"\n                selectLabelKey=\"name\"\n                // disabled={usingExisting}\n              />\n              {/* <Input\n                id=\"State\"\n                label=\"State\"\n                value={ev.State}\n                onChange={updateFormFields}\n              /> */}\n            </div>\n            <div className=\"col-4\">\n              <Input\n                id=\"Country\"\n                label=\"Country\"\n                value={ev.Country}\n                onChange={updateFormFields}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"d-flex justify-content-end\">\n            <Button btnStyle=\"link\" onClick={() => handleCancel(index)}>\n              Close\n            </Button>\n            <Button btnStyle=\"primary\" onClick={() => handleSave(ev)}>\n              Save Event\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* TEMP: fixed footer padding */}\n      <div style={{ height: \"15px\" }}></div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"../controls/index\";\n\nfunction setEventTitle(type) {\n  let title;\n  switch (type) {\n    case \"Birth\":\n      title = \"Born\";\n      break;\n    case \"Marriage\":\n      title = \"Married\";\n      break;\n    case \"Death\":\n      title = \"Died\";\n      break;\n    default:\n      title = \"--\";\n      break;\n  }\n\n  return title;\n}\n\nfunction displayDate(date) {\n  const options = {\n    timeZone: \"UTC\"\n  };\n  return new Date(date).toLocaleDateString(\"en-US\", options);\n}\nexport default function EventSectionDisplay({\n  event,\n  handleDelete,\n  setCurrentEvent,\n  UserId\n}) {\n  return (\n    <div className=\"displayItem\">\n      <div className=\"row \">\n        <div className=\"col-10\">\n          <div className=\"event-item-title\">\n            <b>{setEventTitle(event.Type)}</b> {displayDate(event.Date)}\n          </div>\n          <div>\n            {event.City}, {event.State}, {event.County && `${event.County} Co.`}\n            , {event.Country}{\" \"}\n          </div>\n        </div>\n        {UserId && (\n          <>\n            <div className=\"col-2\">\n              <Button\n                title=\"Delete this event record\"\n                btnStyle=\"link\"\n                role=\"button\"\n                onClick={() => handleDelete(event.id)}\n              >\n                <i className=\"fas fa-trash\"></i>\n              </Button>\n\n              <Button\n                title=\"Edit this event record\"\n                btnStyle=\"link\"\n                role=\"button\"\n                onClick={() => setCurrentEvent(event)}\n              >\n                <i className=\"fas fa-pen\"></i>\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","// import rootsProject from \"../config/config\";\n// const { eventsDbCollection, SafeGET } = rootsProject();\n\nconst httpEventService = () => {\n  const saveEvent = async (entity, user) => {\n    const { id } = entity;\n\n    if (!id) {\n      const eid = await eventsDbCollection.add(entity);\n\n      if (entity.Type.toLowerCase() === \"marriage\" && user?.Spouse) {\n        // add event to spouse's events, too\n        saveEvent({ ...entity, UserId: user.Spouse });\n      }\n\n      return { ...entity, id: eid.id };\n    }\n    return await eventsDbCollection.doc(id).update(entity);\n  };\n\n  const listEvents = async (id) => {\n    if (!SafeGET) {\n      return [];\n    }\n\n    // TODO: get events by `UserId`\n    const snapshot = await eventsDbCollection\n      .where(\"UserId\", \"==\", id.toString())\n      //.orderBy(\"Date\", \"desc\")\n      .get();\n\n    return snapshot.docs.map((doc) => {\n      return { ...doc.data(), id: doc.id };\n    });\n  };\n\n  function getEvent(id) {\n    if (!SafeGET) {\n      return [];\n    }\n\n    return eventsDbCollection.doc(id).get();\n  }\n\n  function deleteEvent(id) {\n    return eventsDbCollection.doc(id).delete();\n  }\n\n  return {\n    saveEvent: () => Promise.resolve([]),\n    getEvent: () => Promise.resolve([]),\n    listEvents: () => Promise.resolve([]),\n    deleteEvent: () => Promise.resolve([]),\n  };\n};\n\nexport default httpEventService;\n","export default function ({ itemType }) {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">No {itemType} found.</div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EventForm from \"../shared/EventForm\";\nimport EventSectionDisplay from \"./EventSectionDisplay\";\nimport httpEventService from \"../hooks/eventService\";\nimport NoItemFound from \"./NoItemsFound\";\n\nexport default function EventSection({ UserId, user }) {\n  const [events, setEvents] = useState([]);\n  const [eventType, setEventType] = useState();\n  const [modalOpen, setModalOpen] = useState(false);\n  const { listEvents, saveEvent, deleteEvent } = httpEventService();\n  const newEvent = {\n    Type: \"\",\n    Date: \"\",\n    City: \"\",\n    State: \"\",\n    County: \"\",\n    Country: \"United States\",\n    UserId\n  };\n  const [currentEvent, setCurrentEvent] = useState(null);\n\n  useEffect(() => {\n    if (UserId) {\n      listEvents(UserId).then((response) => setEvents(response));\n    }\n  }, [UserId]);\n\n  useEffect(() => {\n    if (currentEvent) {\n      setModalOpen(true);\n    } else {\n      setEventType(\"\");\n      setModalOpen(false);\n    }\n  }, [currentEvent]);\n\n  function setFormAndMemberType(eventType) {\n    setCurrentEvent({ ...newEvent, Type: eventType });\n    // setModalOpen(true);\n  }\n\n  function cancelEvent() {\n    setCurrentEvent(null);\n    // setEventType(\"\");\n    // setModalOpen(false);\n  }\n\n  function handleDelete(id) {\n    const filtered = events.filter((ev) => ev.id !== id);\n    setEvents(filtered);\n    deleteEvent(id);\n  }\n\n  function save(event) {\n    const { id } = event;\n    saveEvent(event, user).then((response) => {\n      // setModalOpen(false);\n      setCurrentEvent(null);\n      // setEventType(\"\");\n      setEvents((prev) => {\n        if (id) {\n          let filtered = prev.filter((ev) => ev.id !== id);\n          return [...filtered, event];\n        }\n        return [...prev, response];\n      });\n    });\n  }\n\n  return (\n    <>\n      <div className=\"col profileListing eventListing\">\n        <header>\n          <h3>Life Events</h3>\n          <select\n            className=\"form-select form-select-sm\"\n            name=\"familyType\"\n            id=\"familyType\"\n            value={eventType}\n            onChange={({ target }) => setFormAndMemberType(target.value)}\n          >\n            <option value=\"\">Add Event</option>\n            <option value=\"Birth\">Birth</option>\n            <option value=\"Death\">Death</option>\n            <option value=\"Marriage\">Marriage</option>\n          </select>\n        </header>\n\n        {events\n          ?.sort((a, b) => {\n            // new Date(date).toLocaleDateString(\"en-US\");\n            const aDate = a.Date;\n            const bDate = b.Date;\n\n            if (aDate > bDate) {\n              return 1;\n            }\n            if (aDate < bDate) {\n              return -1;\n            }\n\n            return 0;\n          })\n          ?.map((event, idx) => (\n            <div key={idx} className=\"col\">\n              <EventSectionDisplay\n                handleCancel={cancelEvent}\n                {...{ setCurrentEvent, event, UserId, handleDelete }}\n              />\n            </div>\n          ))}\n        {!events.length && <NoItemFound itemType=\"events\" />}\n      </div>\n      {modalOpen ? <div className=\"my-modal-cover\"></div> : null}\n      {modalOpen ? (\n        <div className=\"my-modal\">\n          <EventForm\n            event={currentEvent}\n            handleSave={save}\n            handleCancel={cancelEvent}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./profile.css\";\r\n\r\nexport default function FamilySectionDisplay({ member }) {\r\n  const { FirstName, LastName, MiddleName, id } = member;\r\n  return (\r\n    <div className=\"displayItem\">\r\n      <Link to={`/${id}`}>\r\n        {FirstName} {MiddleName} {LastName}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","// import rootsProject from \"../config/config\";\n// const { userDbCollection, SafeGET } = rootsProject();\n\nfunction updateParentsOfSiblings({ contextMember, id }) {\n  if (contextMember?.Parents?.length) {\n    userDbCollection\n      .where(\"Parents\", \"array-contains-any\", [...contextMember?.Parents])\n      .get()\n      .then((snapshot) => {\n        snapshot.docs.forEach((doc) => {\n          const child = doc.data();\n          //if (child.id !== id) {\n          userDbCollection\n            .doc(child.id)\n            .update({ Parents: [...child.Parents, id] });\n          //}\n        });\n      });\n\n    // updateParentsSpouse({ contextMember, id });\n  }\n}\n\nfunction updateParentsSpouse({ contextMember, id }) {\n  // this assumes the contextMember is a child\n  userDbCollection.doc(contextMember.Parents[0]).update({ Spouse: id });\n  // userDbCollection.doc(contextMember.id).update({ Spouse: id });\n}\n\nfunction updateChildrenOfParents({ contextMember, id }) {\n  // update kids\n  //if (contextMember?.Parents?.length) {\n  userDbCollection\n    .where(\"Parents\", \"array-contains\", contextMember.id)\n    .get()\n    .then((snapshot) => {\n      snapshot.docs.forEach((doc) => {\n        const child = doc.data();\n        userDbCollection\n          .doc(child.id)\n          .update({ Parents: [...child.Parents, id] });\n      });\n    });\n  //}\n\n  // update other parent\n  // if (contextMember.Parents.length === 1) {\n  //   updateParentsSpouse({ contextMember, id });\n  // }\n}\n\n// TODO: What happens when, for example, a Parent is added or deleted?\n// TODO: CRUD to delete a member (should also cascade the delete to other members records)\n// weird things happen when adding a sibling - Existing `parents spouse` don't update and siblings `Parents` don't update\nconst httpUserService = () => {\n  const createUser = async ({ entity }) => {\n    const { memberType, contextMember, Type, ...rest } = entity;\n    const newUser = await userDbCollection.add(rest);\n    if (memberType.toLowerCase() === \"spouse\") {\n      // udpate context members' kids with a new parent\n      updateChildrenOfParents({ contextMember, id: newUser.id });\n      // add entity as spouse to context member\n      updateUser({ entity: { ...contextMember, Spouse: newUser.id } });\n    } else if (memberType.toLowerCase() === \"parents\") {\n      // if 0 parents we know they have no siblings yet\n      //(business rule says you can't add siblings w/o at least 1 parent)\n      if (!contextMember.Parents.length) {\n        updateUser({ entity: { ...contextMember, Parents: [newUser.id] } });\n      } else {\n        updateParentsOfSiblings({ contextMember, id: newUser.id });\n      }\n\n      // if contextMember only has 1 parent, update that parent with their spouse\n      if (contextMember?.Parents?.length === 1) {\n        updateParentsSpouse({ contextMember, id: newUser.id });\n      }\n    }\n\n    // update new user with new id prop\n    userDbCollection.doc(newUser.id).set({ ...rest, id: newUser.id });\n    const docRef = userDbCollection.doc(newUser.id);\n    const doc = await docRef.get();\n    return doc.data();\n  };\n\n  const updateUser = async ({ entity }) => {\n    const { memberType = \"\", contextMember = {}, ...rest } = entity;\n\n    return await userDbCollection.doc(rest.id).update(rest);\n  };\n\n  const saveUser = async (entity) => {\n    if (!entity.id) {\n      return createUser({ entity });\n    } else {\n      return updateUser({ entity });\n    }\n  };\n\n  // Save family members\n  const saveUserOrig = async (entity) => {\n    const { id, memberType, contextMember, ...rest } = entity;\n    let uid;\n\n    if (!id) {\n      uid = await userDbCollection.add(rest);\n\n      // update the parents of contextMember's children\n      // and update contextMember's spouse\n      if (memberType.toLowerCase() === \"spouse\") {\n        userDbCollection\n          .where(\"Parents\", \"array-contains\", contextMember.id)\n          .get()\n          .then((snapshot) => {\n            snapshot.docs.forEach((doc) => {\n              const child = doc.data();\n              userDbCollection\n                .doc(child.id)\n                .update({ Parents: [...child.Parents, uid.id] });\n            });\n          });\n\n        // and update contextmember's Spouse prop as well\n        saveUser({ ...contextMember, Spouse: uid.id });\n      } else if (memberType.toLowerCase() === \"parent\") {\n        // when adding a parent update contextmember's siblings as well\n        if (contextMember?.Parents.length >= 1) {\n          userDbCollection\n            .where(\"Parents\", \"array-contains-any\", [...contextMember?.Parents])\n            .get()\n            .then((snapshot) => {\n              snapshot.docs.forEach((doc) => {\n                const child = doc.data();\n                if (child.id !== uid) {\n                  userDbCollection\n                    .doc(child.id)\n                    .update({ Parents: [...child.Parents, uid.id] });\n                }\n              });\n            });\n        }\n\n        // when adding a parent update the existing parent's spouse field\n        // if contextMember only has 1 parent, update that parent with new parent id\n        if (contextMember.Parents.length === 1) {\n          userDbCollection\n            .doc(contextMember.Parents[0])\n            .update({ Spouse: uid.id });\n        }\n\n        saveUser({\n          ...contextMember,\n          Parents: [...contextMember.Parents, uid.id],\n        });\n      }\n\n      // finally, add the new user/family member\n      const finalId = uid ? uid.id : id;\n      userDbCollection.doc(finalId).set({ ...rest, id: finalId });\n\n      // GET the newly saved member and return for display\n      const docRef = userDbCollection.doc(finalId);\n      const doc = await docRef.get();\n      return doc.data();\n    }\n    // else just update the existing member\n    return await userDbCollection.doc(`${id}`).update(entity);\n  };\n\n  const listUsers = async () => {\n    if (!SafeGET) {\n      return [{ LastName: \"This application is currently shut off.\" }];\n    }\n\n    const snapshot = await userDbCollection.orderBy(\"LastName\", \"desc\").get();\n    return snapshot.docs.map((doc) => doc.data());\n  };\n\n  function getUser(id) {\n    if (!SafeGET) {\n      return Promise.resolve();\n    }\n    return userDbCollection.doc(id).get();\n  }\n\n  function deleteUser(id) {\n    return userDbCollection.doc(id).delete();\n  }\n\n  const userSelectOptions = async () => {\n    const snapshot = await userDbCollection.orderBy(\"LastName\", \"desc\").get();\n    return snapshot.docs.map((doc) => doc.data());\n  };\n\n  return {\n    saveUser: () => Promise.resolve([]),\n    getUser: () => Promise.resolve([]),\n    listUsers: () => Promise.resolve([]),\n    deleteUser: () => Promise.resolve([]),\n    userSelectOptions: () => Promise.resolve([]),\n  };\n};\n\nexport default httpUserService;\n","// import rootsProject from \"../config/config\";\n// const { userDbCollection, SafeGET } = rootsProject();\n\nlet parentTree = {};\nlet childrenTree = {};\n// let currentId;\n\nasync function fetchChildren(parents) {\n  //let spouse = null;\n  let children;\n\n  // fetch spouse\n  // todo: should we only fetch for MALE members? we only need 1 member to provide the spouse\n  // if (member.Spouse) {\n  //   spouse = await userDbCollection.where(\"id\", \"==\", member.Spouse).get();\n  // }\n  console.log(parents);\n\n  // fetch siblings\n  if (parents.Parents.length) {\n    const sRef = await userDbCollection\n      .where(\"Parents\", \"array-contains-any\", [...parents.Parents])\n      .get();\n    children = sRef?.docs.map((doc) => doc.data());\n  }\n\n  return {\n    ...parents,\n    childrenTree: children,\n  };\n}\n\nasync function fetchChildrenRecursive({ parents, parent = {}, idx = 0 }) {\n  const updatedMember = await fetchChildren(parents);\n\n  parent.childrenTree = parent?.childrenTree?.map((lin, index) => {\n    if (index === idx) {\n      return updatedMember;\n    }\n    return lin;\n  });\n\n  // still need to fetch parents of newly fetched siblings (not children) here\n  if (updatedMember.childrenTree.length) {\n    updatedMember.childrenTree.forEach((p, idx) =>\n      fetchChildrenRecursive({\n        member: p,\n        parent: updatedMember,\n        idx,\n      })\n    );\n    return childrenTree;\n  } else {\n    // this never fires\n    return childrenTree;\n  }\n}\n\nasync function fetchParents(member) {\n  let parents = [];\n\n  // fetch parents\n  if (member.Parents.length) {\n    const pRef = await userDbCollection.where(\"id\", \"in\", member.Parents).get();\n    parents = pRef?.docs.map((doc) => doc.data());\n  }\n\n  return {\n    ...member,\n    lineageTree: parents,\n  };\n}\n\nasync function fetchParentsRecursive({ member, parent = {}, idx = 0 }) {\n  // currentId = member.id;\n  const updatedMember = await fetchParents(member);\n\n  if (!parentTree.hasOwnProperty(\"FirstName\")) {\n    parentTree = updatedMember;\n  }\n\n  parent.lineageTree = parent?.lineageTree?.map((lin, index) => {\n    if (index === idx) {\n      return updatedMember;\n    }\n    return lin;\n  });\n\n  if (updatedMember.Parents.length) {\n    updatedMember.lineageTree.forEach((p, idx) =>\n      fetchParentsRecursive({\n        member: p,\n        parent: updatedMember,\n        idx,\n      })\n    );\n    return parentTree;\n  } else {\n    // this never fires\n    return parentTree;\n  }\n}\n\nfunction invertTree(tree) {\n  var newObject = {};\n\n  // let loop = (node) => {\n  //   for (const [key, value] of Object.entries(node)) {\n  //     console.log(key, value);\n  //     if (key === \"lineageTree\") {\n  //       loop(value); // array\n  //     }\n  //   }\n  // };\n\n  function loop(tree) {\n    // console.log(tree);\n    if (tree?.lineageTree) {\n      tree.lineageTree.forEach((lin) => {\n        console.log(lin);\n        if (lin.lineageTree.length) {\n          loop(lin.lineageTree);\n        }\n        //return [];\n      });\n    }\n  }\n\n  loop(tree);\n\n  // var keys = [];\n\n  // for (var key in tree) {\n  //   keys.push(key);\n  // }\n\n  // for (var i = keys.length - 1; i >= 0; i--) {\n  //   var value = tree[keys[i]];\n  //   newObject[keys[i]] = value;\n  // }\n\n  return newObject;\n}\n\nfunction delay(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nconst HttpFamilyService = () => {\n  const listFamily = async (user) => {\n    if (!SafeGET) {\n      return [];\n    }\n\n    const { Parents, Spouse, id = \"\" } = user;\n\n    let parents, spouse, children, siblings;\n    if (Parents?.length) {\n      parents = await userDbCollection.where(\"id\", \"in\", Parents).get();\n    }\n\n    if (Spouse) {\n      spouse = await userDbCollection.where(\"id\", \"==\", Spouse).get();\n    }\n\n    children = await userDbCollection\n      .where(\"Parents\", \"array-contains-any\", [id])\n      .get();\n\n    if (user?.Parents?.length) {\n      siblings = await userDbCollection\n        .where(\"Parents\", \"array-contains-any\", [...user.Parents])\n        //.where(\"id\", \"!=\", user.id) // requires an index in the db\n        .get();\n    }\n\n    const fam = await Promise.all([parents, spouse, children, siblings]);\n    return fam.map((doc) => doc?.docs?.map((doc) => doc.data()));\n  };\n\n  // const traverse = (root) => {\n  //   root.children.forEach((child) => {\n  //     console.log(child.value)\n  //     traverse(child)\n  //   })\n  // }\n\n  const getFamilyTree = async ({ contextMember }) => {\n    // fetch family in context of logged in person (eventually the person selected)\n    // let previousId;\n    // const tree = await fetchParentsRecursive({\n    //   member: contextMember\n    // });\n    // var sleep = (time) => new Promise((resolve) => setTimeout(resolve, time));\n    // var poll = (promiseFn, time) =>\n    //   promiseFn().then(sleep(time).then(() => poll(promiseFn, time)));\n    // return poll(\n    //   () =>\n    //     new Promise(() => {\n    //       console.log(previousId, currentId);\n    //       if (previousId !== currentId) {\n    //         previousId = currentId;\n    //       } else {\n    //         console.log(\"fired\");\n    //         return tree;\n    //       }\n    //     }),\n    //   1000\n    // );\n\n    // separate code\n    // return delay(1000).then(() => {\n    //   console.log(previousId, currentId);\n    //   if (previousId !== currentId) {\n    //     previousId = currentId;\n    //     delay(1000);\n    //   } else {\n    //     return tree;\n    //   }\n    // });\n    //}\n\n    // separate code\n    // const poll = window.setInterval(() => {\n    //   if (currentId === previousId) {\n    //     clearInterval(poll);\n    //     return delay(1000).then(function () {\n    //       return response;\n    //     });\n    //   }\n    //   previousId = currentId;\n    // }, 100);\n    // });\n\n    const tree = await fetchParentsRecursive({\n      member: contextMember,\n    });\n    const finalParentTree = await delay(1000).then(() => tree);\n\n    const invertedParentTree = invertTree(finalParentTree);\n    console.log(invertedParentTree);\n\n    // const childrenTree = [finalParentTree].map(async (parents) => {\n    //   const childfoo = await fetchChildrenRecursive({ parents });\n    //   console.log(childfoo);\n    //   return childfoo;\n    // });\n    // console.log(finalTree);\n\n    return [];\n    /**\n     *\n     *\n     *\n     * the code below is the GOAT, leave it alone\n     *\n     */\n\n    // this wrks!\n    // recursively fetch parents\n    // const tree = await fetchParentsRecursive({\n    //   member: contextMember\n    // });\n    // return delay(1000).then(() => tree);\n  };\n\n  return {\n    listFamily: () => Promise.resolve([]),\n    getFamilyTree: () => Promise.resolve([]),\n  };\n};\n\nexport default HttpFamilyService;\n","export default {\n  parents: [{ name: \"Father\" }, { name: \"Mother\" }],\n  siblings: [{ name: \"Brother\" }, { name: \"Sister\" }],\n  spouse: [{ name: \"Husband\" }, { name: \"Wife\" }],\n  children: [{ name: \"Child\" }]\n};\n","import React from \"react\";\nimport { Input, Select, Button, DateInput } from \"../controls/index\";\nimport MemberTypeOptions from \"./MemberTypes\";\n// import httpUserService from \"../hooks/userService\";\n\nexport default function MemberForm({\n  user,\n  onChange,\n  title,\n  handleCancel = () => {},\n  handleSave = () => {},\n  // handleSaveById,\n  memberType = null\n}) {\n  // const [usingExisting, setUsingExisting] = useState(false);\n  // const { userSelectOptions } = httpUserService();\n\n  // function selectExisting(selected) {\n  //   const { value } = selected.target;\n  //   setUsingExisting(Boolean(value.length));\n\n  //   handleSaveById({ id: value, memberType });\n  // }\n\n  function setGender(e) {\n    onChange(e);\n\n    const genderValue = e.target.value === \"Father\" ? \"Male\" : \"Female\";\n    onChange({\n      target: {\n        name: \"Gender\",\n        value: e.target.value ? genderValue : \"\"\n      }\n    });\n  }\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3>{title}</h3>\n        </div>\n        <div className=\"card-body\">\n          {/* {!user.id && (\n            <>\n              <div className=\"row\">\n                <div className=\"col-6\">\n                  <Select\n                    className=\"form-control\"\n                    id=\"ExistingMember\"\n                    label=\"Choose Existing Family Member\"\n                    onChange={selectExisting}\n                    selectValueKey=\"id\"\n                    selectLabelKey=\"FirstName\"\n                    options={userSelectOptions()}\n                  />\n                </div>\n              </div>\n              <hr />\n            </>\n          )} */}\n\n          <div className=\"row\">\n            {memberType && (\n              <div className=\"col-4\">\n                <Select\n                  id=\"Type\"\n                  label=\"Type\"\n                  value={user.Type}\n                  onChange={setGender}\n                  options={MemberTypeOptions[`${memberType}`]}\n                  // disabled={usingExisting}\n                />\n              </div>\n            )}\n            <div className=\"col-4\">\n              <Input\n                id=\"FirstName\"\n                label=\"First Name\"\n                value={user.FirstName}\n                onChange={onChange}\n                // disabled={usingExisting}\n                // required={!usingExisting}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Input\n                id=\"MiddleName\"\n                label=\"Middle Name\"\n                value={user.MiddleName}\n                onChange={onChange}\n                // disabled={usingExisting}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Input\n                id=\"LastName\"\n                label=\"Last Name\"\n                value={user.LastName}\n                onChange={onChange}\n                // disabled={usingExisting}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Select\n                id=\"Gender\"\n                label=\"Gender\"\n                value={user.Gender}\n                onChange={onChange}\n                options={[{ name: \"Male\" }, { name: \"Female\" }]}\n                // disabled={usingExisting}\n              />\n            </div>\n            {(user.Gender === \"Female\" ||\n              user.Type === \"Wife\" ||\n              user.Type === \"Mother\") && (\n              <div className=\"col-4\">\n                <Input\n                  id=\"MaidenName\"\n                  label=\"Maiden Name\"\n                  value={user.MaidenName}\n                  onChange={onChange}\n                  // disabled={usingExisting}\n                />\n              </div>\n            )}\n            <div className=\"col-4\">\n              <Select\n                id=\"Suffix\"\n                label=\"Suffix\"\n                value={user.Suffix}\n                onChange={onChange}\n                options={[{ name: \"Sr.\" }, { name: \"Jr.\" }]}\n                // disabled={usingExisting}\n              />\n            </div>\n            <div className=\"col-4\">\n              <DateInput\n                id=\"DOB\"\n                label=\"Date of Birth\"\n                value={user.DOB}\n                onChange={onChange}\n                placeholder=\"mm/dd/yyyy\"\n                // disabled={usingExisting}\n              />\n            </div>\n            <div className=\"col-4\">\n              <Select\n                id=\"Status\"\n                label=\"Status\"\n                value={user.Status}\n                onChange={onChange}\n                options={[{ name: \"Deceased\" }, { name: \"Living\" }]}\n                // disabled={usingExisting}\n              />\n            </div>\n            {user.Status === \"Deceased\" && (\n              <div className=\"col-4\">\n                <DateInput\n                  id=\"DOD\"\n                  label=\"Date of Death\"\n                  value={user.DOD}\n                  onChange={onChange}\n                  placeholder=\"mm/dd/yyyy\"\n                  // disabled={usingExisting}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"d-flex justify-content-end\">\n            <Button btnStyle=\"link\" onClick={handleCancel}>\n              Close\n            </Button>\n            <Button\n              // disabled={usingExisting}\n              btnStyle=\"primary\"\n              onClick={() => handleSave(user)}\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport MemberForm from \"../shared/MemberForm\";\n\nexport default function CreateScreen({\n  initialMember,\n  handleCancel,\n  handleSave,\n  handleSaveById,\n  memberType,\n  contextMember\n}) {\n  const [user, setUser] = useState(() => {\n    let initial = initialMember;\n    initial.LastName = contextMember.LastName;\n    if (memberType === \"spouse\") {\n      initial.Spouse = contextMember.id;\n      initial.Type = contextMember.Gender === \"Male\" ? \"Wife\" : \"Husband\";\n      initial.Gender = contextMember.Gender === \"Male\" ? \"Female\" : \"Male\";\n    } else if (memberType === \"siblings\") {\n      initial.Parents = contextMember.Parents;\n    } else if (memberType === \"children\") {\n      initial.Type = \"Child\";\n      initial.Parents = [contextMember.id];\n      if (contextMember.Spouse) {\n        initial.Parents = [...initial.Parents, contextMember.Spouse];\n      }\n    } else if (memberType === \"parents\") {\n      if (contextMember.Parents.length === 1) {\n        initial.Spouse = contextMember.Parents[0];\n      }\n    }\n\n    return {\n      ...initial,\n      memberType,\n      contextMember\n    };\n  });\n\n  const updateFormFields = (e) => {\n    const { name, value } = e.target;\n    setUser((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <>\n      <MemberForm\n        user={user}\n        title={`Add ${memberType}`}\n        onChange={updateFormFields}\n        {...{ handleCancel, handleSave, handleSaveById, memberType }}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport FamilySectionDisplay from \"./FamilySectionDisplay\";\nimport httpUserService from \"../hooks/userService\";\nimport httpFamilyService from \"../hooks/familyService\";\nimport CreateScreen from \"../user/CreateScreen\";\n\nimport \"./profile.css\";\n\nconst NotFound = ({ type }) => <p>No {type}</p>;\n\nexport default function FamilySection({ user }) {\n  const [members, setMembers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [memberType, setMemberType] = useState();\n  const { saveUser } = httpUserService();\n  const { listFamily } = httpFamilyService();\n  const initialMember = {\n    id: \"\",\n    FirstName: \"\",\n    MiddleName: \"\",\n    LastName: \"\",\n    Suffix: \"\",\n    Gender: \"\",\n    Status: \"Living\",\n    Parents: [],\n    Spouse: \"\"\n  };\n\n  useEffect(() => {\n    if (user?.id) {\n      listFamily(user).then((response) => {\n        const [parents, spouse, children, siblings = []] = response;\n        setMembers({\n          parents,\n          spouse,\n          children,\n          siblings: siblings.filter((sib) => sib.id !== user.id)\n        });\n      });\n    }\n  }, [user]);\n\n  function cancelMember() {\n    setModalOpen(false);\n    setMemberType(\"\");\n  }\n\n  function setFormAndMemberType(type) {\n    setMemberType(type);\n    setModalOpen(true);\n  }\n\n  async function save(member) {\n    const savedUser = await saveUser(member);\n    setMemberType(\"\");\n    setModalOpen(false);\n    setMembers((prev) => {\n      const prevMemberType = prev[memberType] ?? [];\n      return {\n        ...prev,\n        [memberType]: [...prevMemberType, savedUser]\n      };\n    });\n\n    // saveUser(member).then((response) => {\n    //   setModalOpen(false);\n    //   setMembers((prev) => {\n    //     const prevMemberType = prev[memberType] ?? [];\n    //     return {\n    //       ...prev,\n    //       [memberType]: [...prevMemberType, response]\n    //     };\n    //   });\n    // });\n  }\n\n  async function saveById({ id, memberType }) {\n    const savedUser = await saveUser({\n      // entity: { id },\n      id,\n      memberType,\n      contextMember: user\n    });\n\n    setModalOpen(false);\n    setMembers((prev) => {\n      const prevMemberType = prev[memberType] ?? [];\n      return {\n        ...prev,\n        [memberType]: [...prevMemberType, savedUser]\n      };\n    });\n\n    // saveUser(member).then((response) => {\n    //   setModalOpen(false);\n    //   setMembers((prev) => {\n    //     const prevMemberType = prev[memberType] ?? [];\n    //     return {\n    //       ...prev,\n    //       [memberType]: [...prevMemberType, response]\n    //     };\n    //   });\n    // });\n  }\n\n  return (\n    <div className=\"col profileListing familyListing\">\n      <header>\n        <h3>Family</h3>\n        <select\n          className=\"form-select form-select-sm\"\n          name=\"familyType\"\n          id=\"familyType\"\n          value={memberType}\n          onChange={({ target }) => setFormAndMemberType(target.value)}\n        >\n          <option value=\"\">Add Member</option>\n          <option value=\"children\">Child</option>\n          <option value=\"parents\">Parent</option>\n          <option value=\"siblings\">Sibling</option>\n          <option value=\"spouse\">Spouse</option>\n        </select>\n      </header>\n      <div className=\"col\">\n        <span>Parents</span>\n        <ul>\n          {members?.parents ? (\n            members.parents\n              .sort((a, b) => {\n                const aGender = a.Gender;\n                const bGender = b.Gender;\n\n                if (aGender < bGender) {\n                  return 1;\n                }\n                if (aGender > bGender) {\n                  return -1;\n                }\n\n                return 0;\n              })\n              ?.map((member, idx) => (\n                <li key={idx}>\n                  <FamilySectionDisplay {...{ member }} />\n                </li>\n              ))\n          ) : (\n            <NotFound type=\"parents\" />\n          )}\n        </ul>\n        <span>Siblings</span>\n        <ul>\n          {members?.siblings?.length ? (\n            members.siblings\n              .sort((a, b) => new Date(a.DOB) - new Date(b.DOB))\n              .map((member, idx) => (\n                <li key={idx}>\n                  <FamilySectionDisplay {...{ member }} />\n                </li>\n              ))\n          ) : (\n            <NotFound type=\"siblings\" />\n          )}\n        </ul>\n        <span>Spouse</span>\n        <ul>\n          {members?.spouse ? (\n            members.spouse?.map((member, idx) => (\n              <li key={idx}>\n                <FamilySectionDisplay {...{ member }} />\n              </li>\n            ))\n          ) : (\n            <NotFound type=\"spouse\" />\n          )}\n        </ul>\n        <span>Children</span>\n        <ul>\n          {members?.children?.length ? (\n            members.children\n              .sort((a, b) => new Date(a.DOB) - new Date(b.DOB))\n              ?.map((member, idx) => (\n                <li key={idx}>\n                  <FamilySectionDisplay {...{ member }} />\n                </li>\n              ))\n          ) : (\n            <NotFound type=\"children\" />\n          )}\n        </ul>\n      </div>\n      {modalOpen && <div className=\"my-modal-cover\"></div>}\n      {modalOpen && (\n        <div className=\"my-modal\">\n          <CreateScreen\n            {...{ initialMember }}\n            title={`Add ${memberType}`}\n            handleCancel={cancelMember}\n            handleSave={save}\n            handleSaveById={saveById}\n            memberType={memberType}\n            contextMember={user}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Template from \"../shared/Template\";\nimport EventSection from \"./EventSection\";\nimport FamilySection from \"./FamilySection\";\nimport httpUserService from \"../hooks/userService\";\n\nconst calcAge = (dob, dod) => {\n  const calcDate = dod ? new Date(dod) : new Date();\n  return Math.floor((calcDate - new Date(dob).getTime()) / 3.15576e10);\n};\n\nexport default function ProfileScreen() {\n  const [profile, setProfile] = useState({});\n  const { getUser } = httpUserService();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      getUser(id).then((response) => {\n        const safeProfile = response.data() ?? {};\n        setProfile(safeProfile);\n      });\n    }\n  }, [id]);\n\n  return (\n    <Template>\n      <Template.Head>\n        <div className=\"profileInfo\">\n          <h2>\n            {profile.FirstName} {profile.MiddleName} {profile.LastName}{\" \"}\n            {profile.MaidenName && `(${profile.MaidenName})`}{\" \"}\n            {profile.Suffix && `, ${profile.Suffix}`}\n            {id && (\n              <Link to={`${id}/edit`}>\n                <i className=\"fa fa-pen\"></i>\n              </Link>\n            )}\n          </h2>\n          <div className=\"profileDemographics\">\n            {profile.DOB && `${calcAge(profile.DOB, profile.DOD)} years old`}{\" \"}\n            {profile.DOB && \" + \"}\n            {profile.Gender} {\" + \"} {profile.Status}\n          </div>\n        </div>\n      </Template.Head>\n      <Template.Body>\n        <div className=\"row\">\n          <EventSection UserId={id} user={profile} />\n          <FamilySection user={profile} />\n        </div>\n      </Template.Body>\n    </Template>\n  );\n}\n","import axios from \"axios\";\n\nconst http = axios;\n\nexport default http;\n","import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport Template from \"../shared/Template\";\n// import httpUserService from \"../hooks/userService\";\nimport useMembers from \"../hooks/useMembers.hook\";\n\nexport default function ListUsersScreen() {\n  const [users, setUsers] = useState([]);\n  // const { listUsers } = httpUserService();\n  const { getMembers } = useMembers();\n\n  useEffect(() => {\n    getMembers().then((response) => setUsers(response));\n  }, [getMembers]);\n\n  return (\n    <Template>\n      <Template.Head>\n        <h2>Family Members</h2>\n      </Template.Head>\n      <Template.Body>\n        <ul className={classnames(\"list-group\", \"listUsers\")}>\n          {users &&\n            users\n              .sort((a, b) => {\n                let nameA = a.FirstName.toUpperCase();\n                let nameB = b.FirstName.toUpperCase();\n                if (nameA < nameB) {\n                  return -1;\n                }\n                if (nameA > nameB) {\n                  return 1;\n                }\n                return 0;\n              })\n              .map((user, idx) => (\n                <li key={idx} className=\"list-group-item\">\n                  <Link\n                    to={`/${user.id}`}\n                    title={`View ${user.FirstName}'s profile`}\n                  >\n                    {user.FirstName} {user.MiddleName} {user.LastName}\n                  </Link>{\" \"}\n                  <Link\n                    to={`/${user.id}/edit`}\n                    title={`Edit ${user.FirstName}'s profile`}\n                  >\n                    <i className=\"fas fa-pen\"></i>\n                  </Link>{\" \"}\n                  {user?.id && (\n                    <Link\n                      to={`/${user.id}/tree`}\n                      title={`View ${user.FirstName}'s Familiy Tree`}\n                    >\n                      View Tree\n                    </Link>\n                  )}\n                </li>\n              ))}\n        </ul>\n      </Template.Body>\n    </Template>\n  );\n}\n","import http from \"../http/http\";\n\nexport default function useMembers() {\n  function getMember(id) {\n    return http.get({\n      url: `/member/${id}`,\n    });\n  }\n\n  function getMembers() {\n    return http.get({\n      url: \"/members\",\n    });\n  }\n\n  function createMember() {\n    return [];\n  }\n\n  function updateMember() {\n    return [];\n  }\n\n  function saveMember() {\n    return [];\n  }\n\n  function deleteMember() {\n    return [];\n  }\n\n  return {\n    getMember,\n    getMembers,\n    saveMember,\n    deleteMember,\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Template from \"../shared/Template\";\nimport MemberForm from \"../shared/MemberForm\";\nimport httpUserService from \"../hooks/userService\";\n\nconst initialState = {\n  DOB: \"\",\n  DOD: \"\",\n  FamilyId: \"\",\n  FirstName: \"\",\n  Gender: \"\",\n  id: \"\",\n  LastName: \"\",\n  MaidenName: \"\",\n  MiddleName: \"\",\n  Status: \"Living\",\n  Suffix: \"\",\n  Type: \"\"\n};\n\nexport default function EditScreen() {\n  const [user, setUser] = useState(initialState);\n  const history = useHistory();\n  const { id } = useParams();\n  const { saveUser, getUser } = httpUserService();\n\n  useEffect(() => {\n    if (id) {\n      getUser(id)\n        .then((response) => {\n          setUser(response.data());\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [id]);\n\n  const updateFormFields = (e) => {\n    const { name, value } = e.target;\n    setUser((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const save = () => {\n    saveUser(user)\n      .then((uid) => {\n        if (!id) {\n          // go to edit after creating\n          history.push(`${uid}/edit`);\n        } else {\n          history.push(`/${id}`);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const cancel = () => {\n    history.push(`/${id}`);\n  };\n\n  return (\n    <Template>\n      <Template.Head />\n      <Template.Body>\n        <MemberForm\n          user={user}\n          title=\"Edit Member\"\n          onChange={updateFormFields}\n          handleCancel={cancel}\n          handleSave={save}\n        />\n      </Template.Body>\n    </Template>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Template from \"../shared/Template\";\nimport httpFamilyService from \"../hooks/familyService\";\nimport httpUserService from \"../hooks/userService\";\n\nexport default function Tree() {\n  const { id } = useParams();\n  const { getFamilyTree } = httpFamilyService();\n  const { getUser } = httpUserService();\n\n  useEffect(() => {\n    if (id) {\n      getUser(id).then(async (response) => {\n        const poop = await getFamilyTree({ contextMember: response.data() });\n        console.log(\"pooop\", poop);\n      });\n    }\n  }, [id, getUser, getFamilyTree]);\n\n  return (\n    <Template>\n      <Template.Head>\n        <div className=\"profileInfo\">whatevers</div>\n      </Template.Head>\n      <Template.Body>stuff</Template.Body>\n    </Template>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProfileScreen from \"./profile/ProfileScreen\";\nimport ListUsersScreen from \"./list/ListUsers\";\nimport EditScreen from \"./user/EditScreen\";\nimport Tree from \"./tree/Tree\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid p0\">\n        <Switch>\n          {/* <Route exact path=\"/create\">\n            <UserScreen pageTitle=\"Create\" />\n          </Route> */}\n          <Route exact path=\"/:id/tree\" pageTitle=\"Tree\">\n            <Tree />\n          </Route>\n          <Route exact path={`/:id/edit`}>\n            <EditScreen />\n          </Route>\n          <Route exact path={`/:id`}>\n            <ProfileScreen />\n          </Route>\n          <Route exact path=\"/\" pageTitle=\"Users\">\n            <ListUsersScreen />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}